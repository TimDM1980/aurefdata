{"version":3,"sources":["src/app.js","src/environment.js","src/httprequest.js","src/kantoor.js","src/main.js","src/referentiedataRequester.js","src/resources/index.js","C:/PrivateWS/ReferentieData/source/referentiedata/WebContent/aurefdata/src/app.html"],"names":["App","heading","responsebody","kantoorcode","zoeken","getKantoren","debug","testing","HttpRequest","url","response","client","configure","config","useStandardConfiguration","withBaseUrl","get","path","fetch","then","json","body","getWithParams","pathParams","getWithQueryParams","queryParams","post","bodyJson","method","headers","JSON","stringify","delete","put","Kantoor","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","ReferentiedataRequester","httpRequest","querystring"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Kantoor} from './kantoor';\nimport {ReferentiedataRequester} from '../../aurefdata/src/referentiedataRequester';\n\nexport class App {\n  constructor() {\n    this.heading = \"Referentiedata opzoeken\";\n    this.responsebody = 'hier komt de response body';\n    this.kantoorcode = '';\n  }\n\n  zoeken() {\n    if (this.kantoorcode) {\n      this.responsebody = 'komtie: ' + new ReferentiedataRequester().getKantoren(this.kantoorcode);\n      this.kantoorcode = '';\n    }\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { HttpClient, json } from 'aurelia-fetch-client';\n\nexport class HttpRequest {\n\n  constructor() {\n    this.url = \"\";\n    this.response = null;\n    this.client = new HttpClient()\n            .configure(config => {\n          config\n            .useStandardConfiguration()\n            .withBaseUrl('http://localhost:8080/Referentiedata/')\n  });\n  }\n\n  get(path) {\n    let response = {};\n    this.client.fetch(path)\n        .then(response => response.json())\n  .then(body => {\n      response.body = body;\n  });\n    return response;\n  }\n\n  getWithParams(path, pathParams) {\n    return this.get(path + \"/\" + pathParams);\n  }\n\n  getWithQueryParams(path, queryParams) {\n    //return this.get(path + \"/?\" + queryParams);\n    return this.get(path + \"?\" + queryParams + \"&insz=&contactGroep=&taal=NEDERLANDS&userId=&domeinObject=kantoor\");\n  }\n\n  post(path, bodyJson) {\n    this.client.fetch(path, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bodyJson)\n    });\n  }\n\n  delete(path, pathParams) {\n    this.client.fetch(path+ \"/\" + pathParams, {\n      method: 'delete'\n    });\n  }\n\n  put(path, pathParams, bodyJson) {\n    this.client.fetch(path + \"/\" + pathParams, {\n      method: 'put',\n      body: bodyJson,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(bodyJson)\n    });\n  }\n}","export class Kantoor {\r\n    constructor(kantoorcode) {\r\n        this.kantoorcode = kantoorcode;\r\n    }\r\n}","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import{HttpRequest} from './httprequest';\n\nexport class ReferentiedataRequester {\n  constructor() {\n    this.httpRequest = new HttpRequest();\n  }\n\n  getKantoren(kantoorcode) {\n    var querystring = \"kantoorCode=\" + kantoorcode;\n    return this.httpRequest.getWithQueryParams(\"lookup\", querystring);\n  }\n\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":"..\\src"}